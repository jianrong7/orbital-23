name: Deploy Infrastructure

# on:
#   pull_request:
#     types:
#       - closed

on:
  push:
    branches:
      - feat/postman-emulator-fe

jobs:
  tf:
    # if_merged:
    #   if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    strategy:
      fail-fast: true
      matrix:
        node-version: [18.x]

    name: Deploy Site
    steps:
      - run: |
          echo The PR was merged

      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - run: npm ci
        working-directory: frontend
      - run: npm run build --if-present
        working-directory: frontend

      - uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        id: init
        run: terraform init
        working-directory: infrastructure

      - name: Terraform Apply
        id: apply
        run: terraform apply -auto-approve
        working-directory: infrastructure
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
# - uses: actions/github-script@v6
#   if: github.event_name == 'pull_request'
#   env:
#     PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
#   with:
#     github-token: ${{ secrets.GITHUB_TOKEN }}
#     script: |
#       const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
#       #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
#       #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
#       <details><summary>Validation Output</summary>

#       \`\`\`\n
#       ${{ steps.validate.outputs.stdout }}
#       \`\`\`

#       </details>

#       #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`

#       <details><summary>Show Plan</summary>

#       \`\`\`\n
#       ${process.env.PLAN}
#       \`\`\`

#       </details>

#       *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;

#       github.rest.issues.createComment({
#         issue_number: context.issue.number,
#         owner: context.repo.owner,
#         repo: context.repo.repo,
#         body: output
#       })
